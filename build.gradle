buildscript {
	repositories {
		maven {
			url = 'https://repo.maven.apache.org/maven2'
		}
	}
	dependencies {
		classpath 'com.adaptc.gradle:nexus-workflow:0.6'
	}
}

apply plugin:'idea'
apply plugin:com.adaptc.gradle.nexusworkflow.NexusWorkflowPlugin

subprojects { proj ->
	group = "com.adaptc.mws"

	apply plugin:'java'
	apply plugin:'groovy'
	apply plugin:'maven'
	apply plugin:'signing'
	apply plugin:'eclipse'
	apply plugin:'idea'

	// Replace version snapshot with order number (date of last commit)
	if (proj.version.contains("-SNAPSHOT")) {
		def orderNumber = "git log --pretty=format:%ct -1".execute().in.text.trim()
		proj.version = proj.version.replace("-SNAPSHOT", "-" + orderNumber)
	}

	configurations {
		deployerJars
	}
	
	configurations.all {
		// check for updates every build
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
	
	repositories {
		//mavenCentral()
		maven {
			url = 'https://repo.maven.apache.org/maven2'
		}
	}
	
	dependencies {
		deployerJars "org.apache.maven.wagon:wagon-http:1.0-beta-2"
		testCompile ("org.spockframework:spock-core:0.7-groovy-1.8") {
			exclude module:"groovy-all"
		}
	}
	
	sourceCompatibility = "1.8"
	targetCompatibility = "1.8"

	jar.doLast {
		ant.jar(destfile:archivePath, update:true) {
			delegate.manifest {
				attribute(name: "Built-By", value: System.properties['user.name'])
				attribute(name: "Created-By",
						value: System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")")
				attribute(name: "Implementation-Title", value: "Adaptive Computing Plugins Commons - "+proj.archivesBaseName)
				attribute(name: "Implementation-Version", value: proj.version)
				attribute(name: "Implementation-Vendor", value: "adaptivecomputing.com")
				attribute(name: "Implementation-Build", value: System.env["BUILD_NUMBER"] ?: "0")
				attribute(name: "Implementation-Build-Date", value: System.env["BUILD_ID"] ?: new Date())
				attribute(name: "Implementation-Revision", value: System.env["GIT_COMMIT"] ?: "none")
			}
		}
	}

	if (JavaVersion.current().isJava8Compatible()) {
		tasks.withType(Javadoc) {
			// disable strict doclint checking in Java 8
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn:javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}
	
	artifacts {
		archives jar
		archives sourcesJar
		archives javadocJar
	}

	signing {
		required { !proj.version.contains("-SNAPSHOT") }
		sign configurations.archives
	}

	uploadArchives {
		repositories.mavenDeployer {
			beforeDeployment { deployment -> signing.signPom(deployment) }

			configuration = configurations.deployerJars
			repository(url:rootProject."oss-releases.url") {
				authentication(userName:rootProject."oss-releases.username", password:rootProject."oss-releases.password")
			}
			snapshotRepository(url:rootProject."oss-snapshots.url") {
				authentication(userName:rootProject."oss-snapshots.username", password:rootProject."oss-snapshots.password")
			}

			pom {
				project {
					name proj.projectName
					description proj.projectDescription
					licenses {
						license {
							name "The Apache Software License, Version 2.0"
							url "http://www.apache.org/licenses/LICENSE-2.0.txt"
							distribution "repo"
						}
					}
					url "http://github.com/adaptivecomputing/plugins-commons"
					scm {
						connection "scm:git:https://github.com/adaptivecomputing/plugins-commons.git"
						developerConnection "scm:git:https://github.com/adaptivecomputing/plugins-commons.git"
						url "http://github.com/adaptivecomputing/plugins-commons"
					}
					developers {
						developer {
							id "bsaville"
							name "Brian Saville"
							email "bsaville@adaptivecomputing.com"
							organization = "Adaptive Computing, Inc."
							organizationUrl "http://adaptivecomputing.com"
							timezone "-7"
						}
					}
				}
			}
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
	jarFile = 'wrapper/wrapper.jar'
}
